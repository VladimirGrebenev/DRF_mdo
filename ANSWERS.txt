Ответы на вопросы:
******************************************************************************
Вопрос:
1. Как правильно сохранять modified_by?
Пояснение: при создании записи в запросе приходит только value, но в БД нужно
записать не только value, но и того пользователя, который сделал POST-запрос.
Подсказка: Модели и сериализатор остаются неизменными.

Ответ:
Запись о том какой пользователь сделал POST-запрос, будет добавлена
автоматически так как в модели Entity используется ForeignKey для модели User.
Можно для большего порядка при необходимости добавить проверку на
аутентификацию и авторизацию пользователя.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Вопрос:
2. Для создания Entity на вход POST API подаётся json вида
{"data[value]": 10}
Как исправить сериализатор так, чтобы он мог принять поле "data[value]" и
сохранить его в поле value?
Пояснение: Python не позволит написать в сериализаторе
data[value] = IntegerField(...), но есть другое решение
Подсказка: Модели остаются неизменными. Код нужно написать так, чтобы в будущем
 можно было добавить валидацию и возможности доступные через IntegerField.

Ответ:
Думаю есть возможность написать пользовательскую сериализацию. Функцию
валидации def validate_value написал.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Вопрос:
3. Как вывести propertiesв формате {key:value, ...}, если мы заранее не знаем
сколько и каких key может быть?
Пояснение: Иногда нужно вывести данные, когда имена полей заранее неизвестны.
См. пример ниже. Не обращайте внимания на то, что value - строка, это всего
лишь пример, как может выглядеть properties.

Ответ:
Мы во view для PropertyModelViewSet указываем queryset = Property.objects.all()
, таким образом забираем все данные из базы связанные с моделью Property.